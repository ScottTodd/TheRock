name: Build Windows Packages

on:
  workflow_dispatch:
    inputs:
      package_version:
        type: string
        default: ADHOCBUILD

  workflow_call:
    inputs:
      package_version:
        type: string
        default: ADHOCBUILD

jobs:
  build_windows_packages:
    name: Build Windows Packages
    runs-on: windows-2022  # TODO(#36): move to cluster of CPU builders like `azure-windows-scale-nod-ai`
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: true
    steps:
      - name: Enabling git symlinks
        run: git config --global core.symlinks true
      - name: "Checking out repository"
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0
      - uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: "3.11"

      - name: List files (symlinks?)
        run: ls -la base/

      - name: Check ninja version
        run: ninja --version

      - name: Check CMake version
        run: cmake --version

      - name: Check git version
        run: git --version

      - name: Fetch sources
        run: |
          git config --global user.email "nobody@amd.com"
          git config --global user.name "Nobody"
          python ./build_tools/fetch_sources.py --depth 1

      # The full checkout is very large: ~16GB, 9 of which is GIT stuff.
      # So we delete the latter. This must be done after getting any git
      # stamps or such things.
      - name: Trim Disk Space
        run: |
          rm -Rf sources/.repo
          df -h

      - name: Configure MSVC
        uses: ilammy/msvc-dev-cmd@0b201ec74fa43914dc39ae48a89fd1d8cb592756 # v1.13.0

      # TODO: We shouldn't be using a cache on actual release branches, but it
      # really helps for iteration time.
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@53911442209d5c18de8a31615e0923161e435875 # v1.2.16
        with:
          key: windows-build-packages-v1

      - name: Configure Projects
        run: |
          # Generate a new build id.
          package_version="${{ inputs.package_version }}"
          echo "Building package ${package_version}"

          # Build.
          cmake -B build -GNinja . \
            -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DTHEROCK_AMDGPU_FAMILIES=gfx110X-dgpu \
            -DTHEROCK_PACKAGE_VERSION="${package_version}"

      - name: List files under base/
        run: ls -la base/

      - name: List files under base/rocm-cmake
        run: ls -la base/rocm-cmake

      - name: Stat base/rocm-cmake/CMakeLists.txt
        run: stat base/rocm-cmake/CMakeLists.txt

      - name: Build Projects
        run: |
          cmake --build build

      - name: Report
        if: ${{ !cancelled() }}
        run: |
          ls -lh build
