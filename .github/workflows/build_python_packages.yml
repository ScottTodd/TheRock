name: Build Python Packages

# 1. download artifacts from URL (setup_test_environment, rename?)
# 2. build packages
# 3. upload packages to same bucket
# 4. trigger tests
# 5. copy packages to staging / prod

on:
  workflow_dispatch:
    inputs:
      artifact_run_id:
        type: string
        default: "17865324892" # TODO: revert back to empty string after testing
      amdgpu_family:
        type: choice
        options:
          - gfx110X-dgpu
          - gfx1151
          - gfx120X-all
          - gfx94X-dcgpu
          - gfx950-dcgpu
        default: gfx1151
      package_version:
        type: string
        default: "ADHOCBUILD"
  workflow_call:
    inputs:
      artifact_run_id:
        type: string
        default: ""
      amdgpu_families:
        type: string
      package_version:
        type: string

permissions:
  contents: read

jobs:
  build:
    name: Build | ${{ inputs.amdgpu_family }}
    # TODO: make workflow cross platform or fork for Windows/Linux
    #       Linux will build packages using manylinux docker container
    runs-on: ${{ github.repository_owner == 'ROCm' && 'azure-windows-scale-rocm' || 'windows-2022' }}
    env:
      VENV_DIR: ${{ github.workspace }}/.venv
      ARTIFACT_RUN_ID: "${{ inputs.artifact_run_id != '' && inputs.artifact_run_id || github.run_id }}"
      ARTIFACTS_DIR: "./artifacts"
      PACKAGES_DIR: "./packages"
    # outputs:
    #   cp_version: ${{ env.cp_version }}

    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: '3.12'

      - name: Run setup test environment workflow
        uses: './.github/actions/setup_test_environment'
        with:
          ARTIFACT_RUN_ID: ${{ env.ARTIFACT_RUN_ID }}
          AMDGPU_FAMILIES: ${{ inputs.amdgpu_families }}
          OUTPUT_ARTIFACTS_DIR: ${{ env.ARTIFACTS_DIR }}
          VENV_DIR: ${{ env.VENV_DIR }}
          FETCH_ARTIFACT_ARGS: ""
          IS_PR_FROM_FORK: ${{ github.event.pull_request.head.repo.fork }}

      - name: Build Python Packages
        run: |
          python ./build_tools/build_python_packages.py \
            --artifact-dir=${{ env.ARTIFACTS_DIR }} \
            --dest-dir=${{ env.PACKAGES_DIR }} \
            --version=${{ inputs.package_version }}
